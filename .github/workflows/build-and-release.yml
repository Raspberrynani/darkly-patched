name: Build and Release ISO

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create the release

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y squashfs-tools genisoimage rsync

      - name: Configure System Files and Passwords
        env:
          ROOT_PASS: "root"
          RANDOM_PASS: "password123"
        run: |
          echo "Creating MySQL directories..."
          sudo mkdir -p squashfs-data/var/run/mysqld
          sudo mkdir -p squashfs-data/var/log/mysql

          echo "Setting permissions using numeric UID/GID..."
          # FIX: Use the specific UID and GID for mysql from the target system
          sudo chown -R 104:112 squashfs-data/var/lib/mysql
          sudo chown -R 104:112 squashfs-data/var/log/mysql
          sudo chown -R 104:112 squashfs-data/var/run/mysqld

          echo "Setting user passwords and granting sudo rights..."
          echo "root:$ROOT_PASS" | sudo chroot squashfs-data chpasswd
          echo "random:$RANDOM_PASS" | sudo chroot squashfs-data chpasswd
          sudo chroot squashfs-data usermod -a -G sudo random
          echo "Granted sudo rights to user 'random'."

      - name: Build filesystem.squashfs
        run: |
          echo "Building filesystem.squashfs using sudo to preserve all permissions..."
          sudo mksquashfs squashfs-data filesystem.squashfs -comp xz

      - name: Prepare Final ISO Build Directory
        run: |
          mkdir build
          rsync -av iso-data/ build/
          sudo mv filesystem.squashfs build/casper/

      - name: Generate Release Info
        id: release_info
        run: |
          TAG_NAME=$(date +'%Y.%m.%d-%H%M')
          ISO_NAME="darkly-patched-${TAG_NAME}.iso"
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "iso_name=${ISO_NAME}" >> $GITHUB_OUTPUT

      - name: Build Bootable ISO
        run: |
          echo "Building bootable ISO using sudo..."
          echo "BUILD_TIME=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV
          sudo genisoimage -r -V "Custom Distro" \
            -b isolinux/isolinux.bin -c isolinux/boot.cat \
            -no-emul-boot -boot-load-size 4 -boot-info-table \
            -o ${{ steps.release_info.outputs.iso_name }} ./build/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release_info.outputs.tag_name }}
          name: "Release ${{ steps.release_info.outputs.tag_name }}"
          body: |
            This is an automated build from the `main` branch.

            **Build Details:**
            - Message: `${{ github.event.head_commit.message }}`
            - Commit: ${{ github.sha }}
            - Branch: main
            - Build Time: ${{ env.BUILD_TIME }}

            **Files:**
            - `${{ steps.release_info.outputs.iso_name }}` - Darkly Patched
          files: ${{ steps.release_info.outputs.iso_name }}
